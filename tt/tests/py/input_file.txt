def myFunc():
    pass

def myFunc(p1: str = 'string', p2: int = 5):
    pass

def myFunc(p1: Callable[[int], None] = {}) -> None:
    pass

def myFunc(p1: Callable[[int], None] = False, p2: Callable[[int, Exception], None]) -> Sequence[T]:
    pass

def myFunc(p1: int = 5, p2: str = 'string', p3: bool = True, p4: Callable[[int, Exception], None]) -> float:
    pass

def myFunc(p1: Sequence[T]) -> Generator[int, float, str]:
    pass

class MyClass(object):
    def __init__(self: MyClass):
        pass

    def myMethod(self: MyClass, p1: Sequence[T]) -> Generator[int, float, str]:
        pass

    def call(self, *args: str, **kwargs: str) -> str:
        pass

# vim: ft=python
